plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id "com.github.davidmc24.gradle.plugin.avro-base" version "1.7.1"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:3.0.9'

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams
    implementation group: 'org.apache.kafka', name: 'kafka-streams', version: '3.4.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation group: 'org.apache.kafka', name: 'kafka-streams', version: '3.4.1'

    implementation "org.apache.avro:avro:1.11.1"
    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'junit:junit:4.13.2'
}

application {
    // Define the main class for the application.
    mainClass = 'com.squarepegsystems.kafka.exp.App'
}
def generateAvro = tasks.register("generateAvro",  com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask) {

        source('src/main/resources/')
        outputDir = file('src/main/java')
}
tasks.named("compileJava").configure {
        source(generateAvro)
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
